!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";class t{constructor(t){this.modal=document.getElementById(t)}show(t){this.modal.innerHTML=`\n            <div class="modal-content">\n                <h3>${t.title}</h3>\n                <p><strong>Time:</strong> ${t.start_time} - ${t.end_time}</p>\n                <p><strong>Location:</strong> ${t.location}</p>\n                <p><strong>Department:</strong> ${t.department}</p>\n                <p><strong>Available Spots:</strong> ${t.applied} / ${t.total}</p>\n                <button id="applyShift">Apply</button>\n                <button id="cancelShift">Cancel</button>\n                <button id="closeModal">Close</button>\n            </div>\n        `,this.modal.style.display="block",document.getElementById("applyShift").onclick=()=>this.applyShift(t.id),document.getElementById("cancelShift").onclick=()=>this.cancelShift(t.id),document.getElementById("closeModal").onclick=()=>this.hide()}hide(){this.modal.style.display="none"}async applyShift(t){console.log("Applying for shift:",t),this.hide()}async cancelShift(t){console.log("Canceling shift:",t),this.hide()}}class e{constructor(e,n){this.shifts=[{id:1,title:"Morning Shift",location:"Stage A",department:"Logistics",start_time:"2024-03-10T08:00:00",end_time:"2024-03-10T12:00:00",applied:3,total:5,available:!0},{id:2,title:"Evening Shift",location:"Main Entrance",department:"Security",start_time:"2024-03-10T18:00:00",end_time:"2024-03-10T22:00:00",applied:5,total:5,available:!1},{id:3,title:"Overnight Shift",location:"Control Room",department:"IT",start_time:"2024-03-10T23:00:00",end_time:"2024-03-11T06:00:00",applied:2,total:3,available:!0}],this.hours=Array.from({length:24},((t,e)=>e)),this.container=document.getElementById(e),this.modal=new t(n)}render(t={}){if(!this.container)return void console.error("ShiftCalendar: No container found with ID");console.log("Rendering calendar...");const e=this.shifts.filter((e=>(!t.location||e.location===t.location)&&(!t.department||e.department===t.department)&&(!t.date||e.start_time.startsWith(t.date))));console.log("Filtered Shifts:",e),0===e.length&&console.warn("No shifts to display.");const n=this.hours.map((t=>`<div class="time-slot">${t}:00</div>`)).join("");console.log("Render Timeline");const i=e.map((t=>(console.log(`Rendering shift: ${t.title} at ${t.start_time}`),`\n                <div class="shift ${t.available?"available":"full"}" data-id="${t.id}">\n                    <strong>${t.title}</strong> (${t.applied}/${t.total})\n                    <br> ${t.start_time} - ${t.end_time}\n                    <br> ${t.location}\n                </div>`))).join("");this.container.querySelectorAll(".shift").forEach((t=>{t.addEventListener("click",(()=>{const e=parseInt(t.getAttribute("data-id")),n=this.shifts.find((t=>t.id===e));n&&this.modal.show(n)}))})),this.container.innerHTML=`\n            <div class="timeline">\n                <div class="time-header">${n}</div>\n                <div class="shifts-container">${i}</div>\n            </div>\n        `,console.log("Calendar rendered successfully.")}renderShiftBlock(t){const e=new Date(t.start_time).getHours();return`\n            <div class="shift-block" style="grid-column: ${e+1} / span ${new Date(t.end_time).getHours()-e}; background-color: ${t.available?"green":"red"};">\n                <strong>${t.title}</strong><br>\n                ${t.applied}/${t.total} applied\n            </div>\n        `}}class n{constructor(t){this.onFilterChange=t,this.filters={}}render(t){document.getElementById(t).innerHTML='\n            <select id="locationFilter">\n                <option value="">All Locations</option>\n                <option value="Stage A">Stage A</option>\n                <option value="Main Entrance">Main Entrance</option>\n                <option value="Control Room">Control Room</option>\n            </select>\n            <select id="departmentFilter">\n                <option value="">All Departments</option>\n                <option value="Logistics">Logistics</option>\n                <option value="Security">Security</option>\n                <option value="IT">IT</option>\n            </select>\n            <input type="date" id="dateFilter">\n            <button id="applyFilters">Apply</button>\n        ',document.getElementById("applyFilters").onclick=()=>{this.filters.location=document.getElementById("locationFilter").value,this.filters.department=document.getElementById("departmentFilter").value,this.filters.date=document.getElementById("dateFilter").value,this.onFilterChange(this.filters)}}}"undefined"!=typeof window&&(window.ShiftCalendar=e,window.Filter=n)}));
